#- time, startconds = starting conditions and parms = parameters
S = startconds[1]
I = startconds[2]
```{r}
library(deSolve)
sirmod = function(t, startconds, parms) { # inputs into the model are "t"
#- time, startconds = starting conditions and parms = parameters
S = startconds[1]
I = startconds[2]
R = startconds[3]
beta = parms["beta"]
gamma = parms["gamma"]
N = parms["N"]
dS = - beta * S * I/N
dI = beta * S * I/N - gamma * I
dR = gamma * I
res = c(dS, dI, dR)
list(res)
}
## inputs into the model
times = seq(0, 26, by = 1/10) # weeks
parms = c(N = 1, beta = 2, gamma = 1/2) # in weeks
startconds = c(S = 0.999, I = 0.001, R = 0)
# run the model
out = ode(y = startconds, times = times, func = sirmod, parms = parms)
out = as.data.frame(out)
plot(times, out$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
title(ylab = "Proportion S/I/R")
lines(times, out$I, lwd = 2, col = "firebrick")
lines(times, out$R, lwd = 2, col = "purple")
legend(20,0.6,lty = c(1,1,1), lwd = c(2,2,2),col = c("dodgerblue", "firebrick","purple"), legend = c("S","I","R"))
plot(times, out$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
title(ylab = "Proportion S/I/R")
lines(times, out$I, lwd = 2, col = "firebrick")
lines(times, out$R, lwd = 2, col = "purple")
legend(20,0.6,lty = c(1,1,1), lwd = c(2,2,2),col = c("dodgerblue", "firebrick","purple"), legend = c("S","I","R"))
## 1a) what is the epidemic peak size (proportion infected at the peak of the outbreak)?
```{r}
N
max(I)/max(N)
N
max(I)/max(N)
parms
N <- parms(N)
N <- parms[N]
parms
parms[N]
parms['N']
N <- parms['N']
max(I)/max(N)
I
out
N <- parms['N']
I <- out['I]
I
I
out(I)
N <- parms['N']
I <- out['I]
I
```{r}
N <- parms['N']
I <- out['I']
N <- parms['N']
I <- out['I']
N
I
max(N)
max(I)
I <- out['I']
max(I)/max(N)
R[[length(R)]]/max(N)
R <- out['R']
R[[length(R)]]/max(N)
R[[length(R)]]
length(R)
R
length(R)
R[length(R)]/max(N)
length(R)
R[length(R)]
type(R)
View(R)
View(R)
library('dplyr')
R_last <- out %>%
pull('R') %>%
last()
R_last
out %>%
pull('I') %>%
last()
library('dplyr')
R_last <- out %>%
pull('R') %>%
last()
I_last <- out %>%
pull('I') %>%
last()
R_last + I_last
2/(1/2)
R0
R0 <- 2/(1/2)
R0
R_eff <- 2/.5 * out['S']
R_eff
R_eff <- 2/.5 * out['S']
plot(R_eff, type = 'l', lwd = 2, col = 'purple')
R_eff
plot(R_eff,lwd = 2, col = 'purple')
library(ggplot2)
View(R_eff)
out$R_eff <- out$S * R0
View(R)
View(out)
theme_minimal()
out$R_eff <- out$S * R0
ggplot(out, ase(x = time, y = R_eff)) +
geom_line(color = 'blue') +
) +
ggplot(out, aes(x = time, y = R_eff)) +
geom_line(color = 'blue') +
) +
ggplot(out, aes(x = time, y = R_eff)) +
geom_line(color = 'blue') +
theme_minimal()
R0
R0
ggplot(out, aes(x = time, y = R_eff)) +
#geom_line(color = 'blue') +
theme_minimal()
ggplot(out, aes(x = time, y = R_eff)) +
geom_line(color = 'blue') +
theme_minimal()
ggplot(out, aes(x = time, y = R_eff)) +
geom_line(color = 'blue') +
labs(
y = '$R_eff$'
)
theme_minimal()
ggplot(out, aes(x = time, y = R_eff)) +
geom_line(color = 'blue') +
labs(
y = '$R_eff$'
) +
theme_minimal()
install.packages('latex2exp')
library(latex2exp)
library(ggplot2)
library(latex2exp)
out$R_eff <- out$S * R0
ggplot(out, aes(x = time, y = R_eff)) +
geom_line(color = 'blue') +
labs(
y = TeX('$R_eff$')
) +
theme_minimal()
library(ggplot2)
library(latex2exp)
out$R_eff <- out$S * R0
ggplot(out, aes(x = time, y = R_eff)) +
geom_line(color = 'blue') +
labs(
y = TeX('$R_{eff}$')
) +
theme_minimal()
R_eff_less <- out$R_eff[out$R_eff < 1]
R_eff_less
R_eff_less <- out$R_eff[which(out$R_eff < 1)]
R_eff_less <- out %>%
filter(R_eff < 1)
R_eff_less
R_eff_less <- out %>%
filter(R_eff < 1) %>%
slice(1)
R_eff_less
R_eff_less <- out %>%
filter(R_eff < 1) %>%
slice(1) %>%
pull(R_eff)
R_eff_less
R_eff_less <- out %>%
filter(R_eff < 1) %>%
slice(1) %>%
pull(time)
R_eff_less
View(out)
parms
## inputs into the model
parms_new = c(N = 1, beta = 4, gamma = 1/2) # in weeks
startconds = c(S = 0.999, I = 0.001, R = 0)
# run the model
out = ode(y = startconds, times = times, func = sirmod, parms = parms)
out = as.data.frame(out)
## inputs into the model
parms2 = c(N = 1, beta = 4, gamma = 1/2) # in weeks
startconds = c(S = 0.999, I = 0.001, R = 0)
# run the model
out2 = ode(y = startconds, times = times, func = sirmod, parms = parms)
out2 = as.data.frame(out)
plot(times, out$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
title(ylab = "Proportion S/I/R")
lines(times, out$I, lwd = 2, col = "firebrick")
lines(times, out$R, lwd = 2, col = "purple")
legend(20,0.6,lty = c(1,1,1), lwd = c(2,2,2),col = c("dodgerblue", "firebrick","purple"), legend = c("S","I","R"))
out2
plot(times, out$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
## inputs into the model
parms2 = c(N = 1, beta = 4, gamma = 1/2) # in weeks
startconds = c(S = 0.999, I = 0.001, R = 0)
# run the model
out2 = ode(y = startconds, times = times, func = sirmod, parms = parms)
out2 = as.data.frame(out)
plot(times, out$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
title(ylab = "Proportion S/I/R")
lines(times, out$I, lwd = 2, col = "firebrick")
lines(times, out$R, lwd = 2, col = "purple")
legend(20,0.6,lty = c(1,1,1), lwd = c(2,2,2),col = c("dodgerblue", "firebrick","purple"), legend = c("S","I","R"))
## inputs into the model
parms2 = c(N = 1, beta = 4, gamma = 1/2) # in weeks
startconds = c(S = 0.999, I = 0.001, R = 0)
# run the model
out2 = ode(y = startconds, times = times, func = sirmod, parms = parms)
out2 = as.data.frame(out)
plot(times, out2$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
title(ylab = "Proportion S/I/R")
lines(times, out2$I, lwd = 2, col = "firebrick")
lines(times, out2t$R, lwd = 2, col = "purple")
## inputs into the model
parms2 = c(N = 1, beta = 4, gamma = 1/2) # in weeks
startconds = c(S = 0.999, I = 0.001, R = 0)
# run the model
out2 = ode(y = startconds, times = times, func = sirmod, parms = parms)
out2 = as.data.frame(out)
plot(times, out2$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
title(ylab = "Proportion S/I/R")
lines(times, out2$I, lwd = 2, col = "firebrick")
lines(times, out2$R, lwd = 2, col = "purple")
legend(20,0.6,lty = c(1,1,1), lwd = c(2,2,2),col = c("dodgerblue", "firebrick","purple"), legend = c("S","I","R"))
out
out2
## inputs into the model
parms2 = c(N = 1, beta = 4, gamma = 1/2) # in weeks
startconds = c(S = 0.999, I = 0.001, R = 0)
# run the model
out2 = ode(y = startconds, times = times, func = sirmod, parms = parms2)
out2 = as.data.frame(out)
plot(times, out2$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
title(ylab = "Proportion S/I/R")
lines(times, out2$I, lwd = 2, col = "firebrick")
lines(times, out2$R, lwd = 2, col = "purple")
legend(20,0.6,lty = c(1,1,1), lwd = c(2,2,2),col = c("dodgerblue", "firebrick","purple"), legend = c("S","I","R"))
parms1
parms1
parms2
out2
## inputs into the model
parms2 = c(N = 1, beta = 4, gamma = 1/2) # in weeks
startconds = c(S = 0.999, I = 0.001, R = 0)
# run the model
out2 = ode(y = startconds, times = times, func = sirmod, parms = parms2)
out2 = as.data.frame(out)
plot(times, out2$S,type= "l", lwd = 2, col="dodgerblue",xlab = "", ylab = "")
title(xlab = "Time")
title(ylab = "Proportion S/I/R")
lines(times, out2$I, lwd = 2, col = "firebrick")
lines(times, out2$R, lwd = 2, col = "purple")
legend(20,0.6,lty = c(1,1,1), lwd = c(2,2,2),col = c("dodgerblue", "firebrick","purple"), legend = c("S","I","R"))
startconds
times
sirmod
parms
parms2
